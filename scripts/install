#!/bin/bash

# Retrieve arguments
domain=$1
path=$2
server_name=$3
admin_email=$4
admin_password=$5
is_public=$6
open_ports=$7
final_path=/var/www/seafile
seafile_data=$final_path/seafile-data
seafile_version=4.0.6
current_dir=${PWD}

# Check system architecture
if [ -f /usr/bin/rpi-update ]; then
  env=pi
elif [ `getconf LONG_BIT` -eq 64 ]; then
  env=x86-64
elif [ `getconf LONG_BIT` -eq 32 ]; then
  env=i386
else
  echo "Error: Architecture not recognized"
  exit 1
fi

port=''
findPort () {

    port=$1

    sudo yunohost app checkport $port
    while [[ ! $? -eq 0 ]]
        do
            port=$(($port + 1))
            sudo yunohost app checkport $port
        done

   return $port
}

# Check domain/path availability
sudo yunohost app checkurl $domain$path -a seafile
if [[ ! $? -eq 0 ]]; then
  echo "Error: domain/path not available"
  exit 1
fi

# Check dependencies
sudo apt-get install -y python2.7 python-setuptools python-simplejson python-imaging python-mysqldb expect

# Download seafile package
sudo wget -P ../sources/ 'https://bitbucket.org/haiwen/seafile/downloads/seafile-server_'$seafile_version'_'$env'.tar.gz'

# Copy files to the right place
sudo mkdir -p $final_path
sudo mkdir -p $final_path/installed
sudo mkdir -p $final_path/logs
sudo mkdir -p $final_path/seafile-server-$seafile_version
sudo tar xzf ../sources/'seafile-server_'$seafile_version'_'$env'.tar.gz'
sudo mv seafile-server-$seafile_version/* $final_path/seafile-server-$seafile_version
sudo cp ../sources/version.sh $final_path/installed
sudo chmod +x $final_path/installed/version.sh

# Set permissions to seafile directory
sudo chown -R www-data: $final_path

# Find available ports
findPort 10001
ccnet_port=$port
findPort 12001
seafile_port=$port
findPort 8082
seafile_fileserver_port=$port
findPort 8000
seahub_port=$port

sudo yunohost app setting seafile ccnet_port -v $ccnet_port
sudo yunohost app setting seafile seafile_port -v $seafile_port
sudo yunohost app setting seafile seafile_fileserver_port -v $seafile_fileserver_port
sudo yunohost app setting seafile seahub_port -v $seahub_port

sudo yunohost app setting seafile is_public -v $is_public
sudo yunohost app setting seafile open_ports -v $open_ports

# init databases
db_user=seafile
db_pwd=$(dd if=/dev/urandom bs=1 count=200 2> /dev/null | tr -c -d 'A-Za-z0-9' | sed -n 's/\(.\{24\}\).*/\1/p')
sudo yunohost app initdb -d ccnetdb -p $db_pwd $db_user
sudo yunohost app initdb -d seafiledb -p $db_pwd $db_user
sudo yunohost app initdb -d seahubdb -p $db_pwd $db_user

# Run install script
sudo cp ../sources/install.exp $final_path/seafile-server-$seafile_version/install.exp
cd $final_path/seafile-server-$seafile_version
sudo chmod +x ./install.exp
sudo chmod +x ./setup-seafile-mysql.sh
sudo ./install.exp $server_name $domain $ccnet_port $seafile_data $seafile_port $seafile_fileserver_port $db_pwd
sudo rm ./install.exp
cd $current_dir

# Update config
sudo sed -i "s@:8000@$path@g" $final_path/ccnet/ccnet.conf
echo 'SERVE_STATIC = False' | sudo tee -a $final_path/seahub_settings.py
echo 'MEDIA_URL = "'$path'/media/"' | sudo tee -a $final_path/seahub_settings.py
echo 'SITE_ROOT = "'$path'/"' | sudo tee -a $final_path/seahub_settings.py
echo 'FILE_SERVER_ROOT = "https://'$domain$path'/seafhttp"' | sudo tee -a $final_path/seahub_settings.py

# Email configuration
echo 'EMAIL_USE_TLS = False' | sudo tee -a $final_path/seahub_settings.py
echo 'EMAIL_HOST = "localhost"' | sudo tee -a $final_path/seahub_settings.py
echo 'EMAIL_HOST_USER = "seafile@'$domain'"' | sudo tee -a $final_path/seahub_settings.py
echo 'EMAIL_HOST_PASSWORD = ""' | sudo tee -a $final_path/seahub_settings.py
echo 'EMAIL_PORT = "25"' | sudo tee -a $final_path/seahub_settings.py
echo 'DEFAULT_FROM_EMAIL = "seafile@'$domain'"' | sudo tee -a $final_path/seahub_settings.py
echo 'SERVER_EMAIL = "seafile@'$domain'"' | sudo tee -a $final_path/seahub_settings.py

# LDAP configuration
echo '[LDAP]' | sudo tee -a $final_path/ccnet/ccnet.conf
echo 'HOST = ldap://localhost:389' | sudo tee -a $final_path/ccnet/ccnet.conf
echo 'BASE = ou=users,dc=yunohost,dc=org' | sudo tee -a $final_path/ccnet/ccnet.conf
echo 'LOGIN_ATTR = mail' | sudo tee -a $final_path/ccnet/ccnet.conf


# Symlink for media ( because only $path is accessible, not /seahub )
sudo ln -s $final_path/seafile-server-$seafile_version/seahub/media/ $final_path/seafile-server-$seafile_version/seafile/media

# Add Seafile Server to startup
sed -i "s@SEAHUB_PORT@$seahub_port@g" ../conf/seafile-server
sed -i "s@SEAFILE_DIR@$final_path@g" ../conf/seafile-server
sudo cp ../conf/seafile-server /etc/init.d
sudo chmod +x /etc/init.d/seafile-server
sudo update-rc.d seafile-server defaults

# Configure for https
sudo sed -i "s@http://$domain$path@https://$domain$path@g" $final_path/ccnet/ccnet.conf

# Copy first launch script
sudo cp ../sources/first_launch.exp $final_path/seafile-server-$seafile_version/first_launch.exp

# Set permissions to seafile directory
sudo chown -R www-data:www-data $final_path
sudo chown -R www-data:www-data $seafile_data

# Start Seafile Server
sudo su - www-data -c "$final_path/seafile-server-$seafile_version/seafile.sh start"
cd $final_path/seafile-server-$seafile_version
sudo chmod +x ./first_launch.exp
sudo su - www-data -c "cd $final_path/seafile-server-$seafile_version; ./first_launch.exp $seahub_port $admin_email $admin_password"
sudo rm ./first_launch.exp
cd $current_dir

# Modify Nginx configuration file and copy it to Nginx conf directory
sed -i "s@PATHTOCHANGE@$path@g" ../conf/nginx.conf
sed -i "s@ALIASTOCHANGE@$final_path/@g" ../conf/nginx.conf
sed -i "s@SEAHUB_PORT@$seahub_port@g" ../conf/nginx.conf
sed -i "s@SEAFILE_FILESERVER_PORT@$seafile_fileserver_port@g" ../conf/nginx.conf
sed -i "s@SEAFILE_PATH@$final_path@g" ../conf/nginx.conf
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/seafile.conf

# Install the Hack
# Why an hack ?
# The lua script used for the access control on nginx check ngx.var.uri that store the uri.
# Now the problem is that nginx rewrite the uri from /seafile/seafhttp/xxx/yyy to /xxx/yyy
# for the seafile server. So we have to skip /xxx otherwise yunohost will rewrite them to
# /yunohost/sso.
sudo cp -r ../sources/seahack /etc/yunohost/apps/seahack

# Reload Nginx and regenerate SSOwat conf
sudo service nginx reload
sudo yunohost app ssowatconf

# Open port
if [ "$open_ports" = "Yes" ];
then
  sudo yunohost firewall allow $ccnet_port
  sudo yunohost firewall allow $seafile_port
fi

# Register the service on yunohost
sudo yunohost service add seafile-server

# Set public
if [ "$is_public" = "No" ];
then
	sudo yunohost app setting seafile skipped_uris -d
	sudo yunohost app ssowatconf
else
	sudo yunohost app setting seafile skipped_uris -v "/"
fi
